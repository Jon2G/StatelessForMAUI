<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0;net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<Title>Stateless For MAUI</Title>
		<Authors>Jon2G</Authors>
		<Description>A state machine for maui apps that helps to control app life cycle, navigation and connectivity</Description>
		<PackageProjectUrl>https://github.com/Jon2G/StatelessForMAUI</PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<RepositoryUrl>https://github.com/Jon2G/StatelessForMAUI</RepositoryUrl>
		<PackageTags>stateless,statemachine,maui,lifecycle</PackageTags>
		<NeutralLanguage>en</NeutralLanguage>
		<PackageLicenseFile>LICENSE</PackageLicenseFile>
		<IncludeSymbols>True</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<Version>1.0.0.4</Version>
		<!-- added this line -->
		<TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
	</PropertyGroup>
	<Target Name="PrePackage" BeforeTargets="BuildPackage">
		<PropertyGroup>
			<BuildCommand>$(BuildCommand) -IncludeReferencedProjects</BuildCommand>
		</PropertyGroup>
	</Target>
	<!--<ItemGroup Condition="$(TargetFramework.Contains('net8.0'))">
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
	</ItemGroup>-->

	<ItemGroup>
	  <None Include="..\LICENSE">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	  <None Include="..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="AsyncAwaitBestPractices" Version="8.0.0" />
	  <PackageReference Include="TinyTypeContainer" Version="1.0.0" />
	</ItemGroup>
	
	<Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
		<ItemGroup>
			<BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
		</ItemGroup>
	</Target>
	
	<ItemGroup>
	  <ProjectReference Include="..\..\stateless\src\Stateless\Stateless.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Platforms\Android\BackPress.cs">
	    <ExcludeFromCurrentConfiguration>true</ExcludeFromCurrentConfiguration>
	  </Compile>
	</ItemGroup>


</Project>
